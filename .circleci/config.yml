version: 2
jobs:
  build_client:
    docker:
      - image: cimg/node:17.1.0
    environment:
      DECLAB_HOST: ""
    steps:
      - attach_workspace:
          at: ~/project
      - run: git clone https://github.com/materna-se/declab.git
      - run: cd ./declab/client && npm install && npm run generate
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./declab

  build_server:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          at: ~/project
      - run: cd ./declab/server && mvn package -Dmaven.test.skip=true
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./declab

  test_server:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - attach_workspace:
          at: ~/project
      - run: |
          cd ~
          wget https://download.jboss.org/wildfly/20.0.0.Final/wildfly-20.0.0.Final.tar.gz
          tar -xvzf wildfly-20.0.0.Final.tar.gz

          cp ./project/declab/server/target/declab-*.war ./wildfly-20.0.0.Final/standalone/deployments

          cd ~/wildfly-20.0.0.Final
          ./bin/standalone.sh &

          LIMIT=0
          DONE=0
          while [ $LIMIT -lt 30 ] && [ $DONE -ne 1 ]
          do
            if (ls ./standalone/deployments/declab-*.war.deployed)
            then
              echo "Deployment is done."
              DONE=1
            else
              echo "Deployment not finished at $LIMIT..."
              ls -la ./standalone/deployments
              LIMIT=$(($LIMIT + 1))
            fi
            sleep 2
          done

          cd ~/project/declab/server
          mvn test
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./declab

  publish_release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ~/project
      - run: cd ./declab/server && ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -recreate -replace ${CIRCLE_TAG} ./target/declab-${CIRCLE_TAG}.war

  publish_container:
    docker:
      - image: circleci/buildpack-deps:xenial
    steps:
      - attach_workspace:
          at: ~/project
      - setup_remote_docker
      - run: cd ./declab && docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} && docker build --build-arg VERSION=${CIRCLE_TAG} -t maternase/declab:${CIRCLE_TAG} -t maternase/declab:latest . && docker push maternase/declab:${CIRCLE_TAG} && docker push maternase/declab:latest

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build_client:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/

      - build_server:
          requires:
            - build_client
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/

#      - test_server:
#          requires:
#            - build_server
#          filters:
#            branches:
#              only: /.*/
#            tags:
#              only: /.*/

      - publish_release:
          requires:
            - build_server
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

      - publish_container:
          requires:
            - build_server
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/